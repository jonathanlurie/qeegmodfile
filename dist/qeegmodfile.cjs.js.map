{"version":3,"file":"qeegmodfile.cjs.js","sources":["../src/QeegModFileParser.js","../src/QeegModFileInterpreter.js"],"sourcesContent":["/*\n* Author    Jonathan Lurie - http://me.jonahanlurie.fr\n* License   MIT\n* Link      https://github.com/jonathanlurie/es6module\n* Lab       MCIN - http://mcin.ca/ - Montreal Neurological Institute\n*/\n\n\n/**\n* An instance of QeegModFileParser can be used to parse several file\n* (you don't need to create a QeegModFileParser instance per file to parse).\n* The Qeeg MOD file usually have the .MOD extension, though this parser does not\n* need the filename or the extension.\n*\n*/\nclass QeegModFileParser {\n  constructor(){\n    this._rawData = null;\n  }\n  \n  /**\n  * Feed the parser with raw data to be parsed\n  * @param {ArrayBuffer} data - the raw data\n  */\n  setRawData( data ){\n    this._rawData = data;\n  }\n  \n  \n  /**\n  * Launch the parsing of the ArrayBuffer that was given with the method setRawData\n  * @return {Object} - the MOD file data in a readable format\n  */\n  parse(){\n    var qeegData = null;\n    try{\n      qeegData = this._parseNoException();\n    }catch(e){\n      //console.error( e );\n      console.warn(\"This file is not compatible.\");\n    }\n    \n    return qeegData;\n  }\n  \n  \n  /**\n  * [PRIVATE]\n  * This method parses the data without caring of potential exception to be raised,\n  * it does not handle them. Thus, this method is unsafe to use as is and should\n  * no be used directly.\n  * @return {Object} - the MOD file data in a readable format\n  */\n  _parseNoException(){\n    if( !this._rawData ){\n      console.warn(\"The input buffer is null. Nothing to be parsed here.\");\n      return null;\n    }\n    \n    var inputBuffer = this._rawData\n    \n    var view = new DataView( inputBuffer );\n    var littleEndian = true;\n    \n    // ------------- DECODING HEADER -------------------\n    \n    var header = {};\n    \n    // Protection Mask\n    // Offset: 0, length: 2\n    header.protectionMask = view.getUint16(0, littleEndian);\n    \n    // Comment (first byte is the real length)\n    // Offset: 2, length: 81\n    var commentRealLength = view.getUint8(2);\n    var commentBytes = new Uint8Array(inputBuffer, 3, commentRealLength);\n    header.comment = String.fromCharCode.apply(String, commentBytes);\n    \n    // Measure (M) Size\n    // Offset: 83, length: 2\n    header.measureSize = view.getUint16(83, littleEndian);\n    \n    // Duration (D) Size\n    // Offset: 85, length: 2\n    header.durationSize = view.getUint16(85, littleEndian);\n    \n    // First space (F) Size\n    // Offset: 87, length: 2\n    header.firstSpaceSize = view.getUint16(87, littleEndian);\n    \n    // Second space (S) Size\n    // Offset: 89, length: 2\n    header.secondSpaceSize = view.getUint16(89, littleEndian);\n    \n    // Reserved bytes\n    // Offset: 91, length: 2\n    header.reservedBytes = view.getUint16(91, littleEndian);\n    \n    // Data size\n    // Offset: 93, length: 2\n    header.dataSize = view.getUint16(93, littleEndian);\n    \n    // ------------- DECODING MATRIX -------------------\n    var matrixOffset = 95;\n    \n    var matrixSizeElements =  header.measureSize * \n                              header.durationSize * \n                              header.firstSpaceSize * \n                              header.secondSpaceSize;\n                              \n    var matrixSizeBytes = matrixSizeElements * header.dataSize;\n                          \n    var matrixData = new Float32Array(matrixSizeElements);\n    \n    for(var i=0; i<matrixSizeElements; i++){\n      matrixData[i] = view.getFloat32(matrixOffset + i * header.dataSize, littleEndian) \n    }\n    \n    // ------------- DECODING RESERVED BYTE SECTION -------------------\n    var reservedBytesSectionOffset = matrixOffset + matrixSizeBytes ;\n    // we dont care about this section - we wont use it\n    \n    // ------------- DECODING INFO SECTION -------------------\n    // This info section is lways corrupted - we wont use it\n    var infoSectionOffset = reservedBytesSectionOffset + header.reservedBytes;\n    var infoRealLength = view.getUint8(infoSectionOffset);\n    var infoBytes = new Uint8Array(inputBuffer, infoSectionOffset+1, infoRealLength);\n    var info = String.fromCharCode.apply(String, infoBytes);\n    \n    // ------------- DECODING HEADER OF LIST SECTION -------------------\n    var headerOfListOffset = infoSectionOffset + 9;\n    \n    var listSize = 8;\n    var offsetByteSize = 4;\n    var totalByteSize = 2;\n    var headerOfList = new Array(listSize);\n    \n    for(var i=0; i<listSize; i++){\n      var record = {\n        // !! IMPORTANT !! there is a known BUG in the offset value\n        //offset: view.getInt16(headerOfListOffset + i * (offsetByteSize+totalByteSize), littleEndian),\n        total: view.getUint16(headerOfListOffset + i * (offsetByteSize+totalByteSize) + offsetByteSize, littleEndian),\n        labels: null\n      }\n      headerOfList[i] = record;\n    }\n    \n    headerOfList[0].description = \"list of labels for measure dimension\";\n    headerOfList[1].description = \"list of labels for duration dimension\";\n    headerOfList[2].description = \"list of labels for first space dimension\";\n    headerOfList[3].description = \"list of labels for second space dimension\";\n    headerOfList[4].description = \"list of scales\";\n    headerOfList[5].description = \"list of units\";\n    headerOfList[6].description = \"list of transformations\";\n    headerOfList[7].description = \"list of contexts\";\n    \n    var infoSection2Offset = headerOfListOffset + 48;\n    var localOffset = infoSection2Offset\n\n    // list 1 to 6 (0 to 5 on out 0-indexed array)\n    for(var i=0; i<headerOfList.length - 2; i++){\n      var nbOfElem = headerOfList[i].total;\n      \n      headerOfList[i].labels = nbOfElem ? new Array( nbOfElem ).fill(\"\") : 0;\n      \n      for(var j=0; j<nbOfElem; j++){\n        var strByteLength = view.getUint8(localOffset)\n        \n        if( strByteLength ){\n          var strBytes = new Uint8Array(inputBuffer, localOffset+1, strByteLength );\n          //var str = String.fromCharCode.apply(String, strBytes);\n          var str = String.fromCharCode(...strBytes);\n          // some ASCII charcode are wrong, hopefully always in the same way\n          headerOfList[i].labels[j] = str.replace(\"æ\", \"µ\").replace(\"ý\", \"²\"); \n        }\n        \n        localOffset += strByteLength + 1;\n      }\n      \n    }\n\n    // particular case for list 7 (6 on our 0-indexed array) -- the transformations\n    // the total value is not the length but the actual value to consider\n    var transformation = view.getUint8(localOffset);\n    headerOfList[6].labels = transformation;\n    localOffset += headerOfList[6].total*(transformation + 1);\n    \n    // ------------- DECODING THE LIST OF CONTEXT -------------------\n    \n    // parsing the list of contexts\n    var listOfContexts = headerOfList[ headerOfList.length - 1];\n    listOfContexts.contextsByteLength = new Array( listOfContexts.total );\n    listOfContexts.types = new Array( listOfContexts.total );\n    listOfContexts.values = new Array( listOfContexts.total );\n    \n    const regexTypeDetection = /[a-zA-Z ]*\\:{1}([a-zA-Z]*)[\\[]?\\d*[\\]]?/;\n    \n    listOfContexts.labels = new Array( listOfContexts.total ).fill(\"\");\n    \n    for(var iCtx=0; iCtx<listOfContexts.total; iCtx++){\n      var strByteLength = view.getUint8(localOffset)\n      var strBytes = new Uint8Array(inputBuffer, localOffset+1, strByteLength );\n      var str = String.fromCharCode.apply(String, strBytes);\n      listOfContexts.labels[iCtx] = str.split(\":\")[0];\n      listOfContexts.contextsByteLength[iCtx] = view.getUint16(localOffset + strByteLength + 1, littleEndian);\n      \n      var typeMatch = regexTypeDetection.exec( str );\n      if(typeMatch){\n        listOfContexts.types[iCtx] = typeMatch[1].toLowerCase();\n      }else{\n        listOfContexts.types[iCtx] = null;\n      }\n      \n      localOffset += strByteLength + 3;\n    }\n    \n    // getting the values for the contexts\n    for(var iCtx=0; iCtx<listOfContexts.total; iCtx++){\n      var value = null;\n      if( listOfContexts.types[iCtx] === \"single\" ){\n        // single precision floats are on 4 bytes\n        value = view.getFloat32(localOffset, littleEndian);\n        \n      }else if(listOfContexts.types[iCtx] === \"boolean\"){\n        value = new Array(listOfContexts.contextsByteLength[iCtx]);\n        for(var b=0; b<value.length; b++){\n          value[b] = !!view.getUint8(localOffset + b)\n        }\n        \n      }else if(listOfContexts.types[iCtx] === \"string\"){\n        var strByteLength = view.getUint8(localOffset)\n        var strBytes = new Uint8Array(inputBuffer, localOffset+1, strByteLength );\n        value = String.fromCharCode.apply(String, strBytes);\n      }\n      \n      localOffset += listOfContexts.contextsByteLength[iCtx];\n      listOfContexts.values[ iCtx ] = value;\n    }\n    \n    // ------------- CLEANING HEADER OF LIST -------------------\n    \n    for(var i=0; i<headerOfList.length; i++){\n      delete headerOfList[i].total;\n    }\n    \n    delete headerOfList[7].contextsByteLength;\n    delete headerOfList[7].types;\n    \n    var modEeg = {\n      metadata: {\n        comment: header.comment,\n        sizes: {\n          measure: header.measureSize,\n          duration: header.durationSize,\n          firstSpace: header.firstSpaceSize,\n          secondSpace: header.secondSpaceSize,\n        },\n        informationList: headerOfList\n      },\n      \n      data: matrixData\n    }\n    \n    return modEeg;\n  }\n  \n  \n} /* END of QeegModFileParser */\n\nexport { QeegModFileParser }; \n","\nclass QeegModFileInterpreter {\n  \n  constructor( qeegModObj = null ){\n    this._qeegModObj = null;\n    this._typeCode = null;\n    \n    this._typeCodeMap = {\n      \"Z Electrical Tomography for Cortex and Basal Ganglia\": \"ZETCBG\",\n      \"Z Electrical Tomography for Cortex\": \"ZETC\",\n      \"Z Cross Spectrum\": \"ZCROSS\",\n      \"Z Broad Band\": \"ZBBSP\",\n      \"Phase\": \"PHA\",\n      \"Electrical Tomography for Cortex and Basal Ganglia\": \"ETCBG\",\n      \"Electrical Tomography for Cortex\": \"ETC\",\n      \"Cross Spectrum\": \"CROSS\",\n      \"Correlation\": \"COR\",\n      \"Coherence\": \"COH\",\n      \"Broad Band\": \"BBSP\",\n      // \"Raw Electrical Tomography Individual\": \"ET\" // no file of this type to check if it's the correct string\n    }\n    \n    \n    this.setQeegModObj( qeegModObj );\n  }\n  \n  \n  /**\n  * [PRIVATE]\n  * find the typecode by correspondance with the `comment` metadata\n  */\n  _defineTypeCode(){\n    var type = this.getType();\n    \n    if( type in this._typeCodeMap ){\n      this._typeCode = this._typeCodeMap[ type ];\n    }\n  }\n  \n  \n  /**\n  * In case the qeeg MOD object from the parser is not set in the constructor, it can be set here.\n  * @param {Object} qeegModObj - output of a QeegModFileParser instance\n  */\n  setQeegModObj( qeegModObj = null ){\n    if( !qeegModObj )\n      return;\n      \n    this._qeegModObj = qeegModObj;\n    this._defineTypeCode();\n  }\n  \n  \n  /**\n  * Get the qeeg type from the object comment\n  * @return {String} the type\n  */\n  getType(){\n    return this._qeegModObj.metadata.comment;\n  }\n  \n  \n  /**\n  * Get the type code of the data. Can be 'CROSS', 'ZCROSS', 'BBSP', 'ZBBSP',\n  * 'ETC', 'ZETC', 'ETCBG', 'ZETCBG', 'ET', 'COR', 'COH', 'PHA'\n  * @return {string} the type code or null if it was impossible to determine\n  */\n  getTypeCode(){\n    return this._typeCode;\n  }\n  \n  \n  /**\n  * Get all the measure labels\n  * @return {Array} array of strings\n  */\n  getMeasureNames(){\n    return this._qeegModObj.metadata.informationList[0].labels;\n  }\n  \n  \n  /**\n  * Get all the duration labels\n  * @return {Array} array of strings\n  */\n  getDurationsLabels(){\n    return this._qeegModObj.metadata.informationList[1].labels;\n  }\n  \n  \n  /**\n  * Get all the first-space labels\n  * @return {Array} array of strings\n  */\n  getFirstSpaceNames(){\n    return this._qeegModObj.metadata.informationList[2].labels;\n  }\n  \n  \n  /**\n  * Get all the second-space labels\n  * @return {Array} array of strings\n  */\n  getSecondSpaceNames(){\n    return this._qeegModObj.metadata.informationList[3].labels;\n  }\n  \n  \n  /**\n  * Get all the unit labels\n  * @return {Array} array of strings\n  */\n  getUnitsLabels(){\n    return this._qeegModObj.metadata.informationList[5].labels;\n  }\n  \n  \n  /**\n  * Get the size of the measure dimension\n  * @return {Number} the size\n  */\n  getMeasureSize(){\n    return this._qeegModObj.metadata.sizes.measure;\n  }\n  \n  \n  /**\n  * Get the size of the duration dimension\n  * Note: the name \"duration\" is missleading, take it as a sort of measure,\n  *       aka. just another dimension\n  * @return {Number} the size\n  */\n  getDurationSize(){\n    return this._qeegModObj.metadata.sizes.duration;\n  }\n  \n  \n  /**\n  * Get the size of the first-space dimension\n  * @return {Number} the size\n  */\n  getFirstSpaceSize(){\n    return this._qeegModObj.metadata.sizes.firstSpace;\n  }\n  \n  \n  /**\n  * Get the size of the second-space dimension\n  * @return {Number} the size\n  */\n  getSecondSpaceSize(){\n    return this._qeegModObj.metadata.sizes.secondSpace;\n  }\n  \n  \n  /**\n  * Get the size of the dimensions, in the order of varying speed\n  * (the last varies faster)\n  * @return {Array} the dimensions\n  */\n  getDimensionSizes(){\n    return [\n      this._qeegModObj.metadata.sizes.measure,\n      this._qeegModObj.metadata.sizes.duration,\n      this._qeegModObj.metadata.sizes.firstSpace,\n      this._qeegModObj.metadata.sizes.secondSpace\n    ]\n  }\n  \n  \n  /**\n  * Get the number of dimensions actually used in this dataset.\n  * Note: the second-space is not used by all files and even the first-space\n  * for some other. No matter the number of dimensions used,\n  * they are always the first N dim in the sens that they are always the\n  * first N slowest varying dim.\n  * @return {Number} the \n  */\n  getNumberOfDimensionsUsed(){\n    var sizes = this.getDimensionSizes();\n    \n    for(var i=sizes.length-1; i>=0; i--){\n      if( sizes[i] > 1){\n        return i + 1;\n      }\n    }\n    return 0;\n  }\n  \n  \n  /**\n  * Get the transformation applied to the data.\n  *   0 => no transformation\n  *   3 => natural logarithm (log e) \n  */\n  getTranformation(){\n    return this._qeegModObj.metadata.informationList[6].labels;\n  }\n  \n  \n  /**\n  * Get a context by its index\n  * @param {Number} n - index of the context\n  * @return {Object} context object in the form { label: String, value: Number/Array }\n  */\n  getContext( n ){\n    if( n < 0 || n >= this._qeegModObj.metadata.informationList[7].labels.length ){\n      console.warn( \"The context index is out of range\" );\n      return null;\n    }\n    \n    return {\n      label: this._qeegModObj.metadata.informationList[7].labels[ n ],\n      value: this._qeegModObj.metadata.informationList[7].values[ n ],\n    }\n  }\n  \n  \n  /**\n  * get all the context as an array of pairs { label: String, value: Number/Array }\n  * @return {Array} the list of contexts\n  */\n  getAllContexts(){\n    var ctx = this._qeegModObj.metadata.informationList[7];\n    \n    if( ctx.labels.length != ctx.values.length ){\n      console.warn(\"The contexts is corrupted. Inequal amount of values/labels.\");\n      return null;\n    }\n    \n    var allContexts = []\n    \n    for(var i=0; i<ctx.labels.length; i++){\n      allContexts.push({\n        label: ctx.labels[ i ],\n        value: ctx.values[ i ]\n      });\n    }\n    \n    return allContexts;\n  }\n  \n  \n  /**\n  * Get the start Frequency\n  * @return {Number} the start frequency as a float\n  */\n  getStartFrequency(){\n    if( this._typeCode === \"COR\" ) // do not exist for COR\n      return -1;\n      \n    return this._qeegModObj.metadata.informationList[7].values[0];\n  }\n  \n  \n  /**\n  * Get the frequency resolution\n  * @return {Number} the resolution as a float\n  */\n  getFrequencyResolution(){\n    if( this._typeCode === \"COR\" ) // do not exist for COR\n      return -1;\n      \n    return this._qeegModObj.metadata.informationList[7].values[1];\n  }\n  \n  \n  /**\n  * Get the scale factor\n  * @return {Number} the factor as a float\n  */\n  getScaleFactor(){\n    var index = 2\n    \n    if( this._typeCode === \"COR\" ) // the 2 first elements dont exist for COR\n      index -= 2;\n      \n    return this._qeegModObj.metadata.informationList[7].values[ index ];\n  }\n  \n  \n  /**\n  * Get an array of boolean informing of the measure has to be scaled with the scale factor\n  * @return {Array} the booleans\n  */\n  getScaleIfScaleMeasures(){\n    var index = 3\n    \n    if( this._typeCode === \"COR\" ) // the 2 first elements dont exist for COR\n      index -= 2;\n      \n    return this._qeegModObj.metadata.informationList[7].values[ index ];\n  }\n  \n  \n  /**\n  * Get the actual name for the \"measure\" dimension\n  * @return {String} the name \n  */\n  getMeasureName(){\n    var index = 4\n    \n    if( this._typeCode === \"COR\" ) // the 2 first elements dont exist for COR\n      index -= 2;\n      \n    return this._qeegModObj.metadata.informationList[7].values[ index ];\n  }\n  \n  \n  /**\n  * Get the actual name for the \"duration\" dimension\n  * @return {String} the name \n  */\n  getDurationName(){\n    var index = 5\n    \n    if( this._typeCode === \"COR\" ) // the 2 first elements dont exist for COR\n      index -= 2;\n      \n    return this._qeegModObj.metadata.informationList[7].values[ index ];\n  }\n  \n  \n  /**\n  * Get the actual name for the \"first-space\" dimension\n  * @return {String} the name \n  */\n  getFirstSpaceName(){\n    var index = 6;\n    \n    if( this._typeCode === \"COR\" ) // the 2 first elements dont exist for COR\n      index -= 2;\n      \n    return this._qeegModObj.metadata.informationList[7].values[ index ];\n  }\n  \n  \n  /**\n  * Get the actual name for the \"second-space\" dimension\n  * @return {String} the name \n  */\n  getSecondSpaceName(){\n    var index = 7\n    \n    if( this._typeCode === \"COR\" ) // the 2 first elements dont exist for COR\n      index -= 2;\n      \n    return this._qeegModObj.metadata.informationList[7].values[ index ];\n  }\n  \n  \n  /**\n  *\n  */\n  getAllDimensionsNames(){\n    return [\n      this.getMeasureName(),\n      this.getDurationName(),\n      this.getFirstSpaceName(),\n      this.getSecondSpaceName()\n    ]\n  }\n  \n  \n  /**\n  * Get a single value, given some indexes\n  * @param {Number} measureIndex - index among the \"measure\" dimension\n  * @param {Number} durationIndex - index among the \"duration\" dimension\n  * @param {Number} firstSpaceIndex - index among the \"first space\" dimension\n  * @param {Number} secondSpaceIndex - index among the \"second space\" dimension\n  * @return {Number} the value\n  */\n  getValue( measureIndex, durationIndex, firstSpaceIndex, secondSpaceIndex ){\n    var sizes = this._qeegModObj.metadata.sizes;\n    \n    if( measureIndex < 0 || measureIndex >= sizes.measure ){\n      console.warn( \"measureIndex is out of range.\");\n      return null;\n    }\n    \n    if( durationIndex < 0 || durationIndex >= sizes.duration ){\n      console.warn( \"durationIndex is out of range.\");\n      return null;\n    }\n    \n    if( firstSpaceIndex < 0 || firstSpaceIndex >= sizes.firstSpace ){\n      console.warn( \"firstSpaceIndex is out of range.\");\n      return null;\n    }\n    \n    if( secondSpaceIndex < 0 || secondSpaceIndex >= sizes.secondSpace ){\n      console.warn( \"secondSpaceIndex is out of range.\");\n      return null;\n    }\n    \n    var offset = this._getOffset( measureIndex, durationIndex, firstSpaceIndex, secondSpaceIndex )\n    return this._qeegModObj.data[ offset ];\n  }\n  \n  \n  /**\n  * Get an array of values for such measureIndex, durationIndex and firstSpaceIndex.\n  * These 3 arguments are optional but the unused ones must be on the right.\n  * If using no argument, or only measureIndex, or only measureIndex and durationIndex,\n  * then a larger array corresponding o broarder range of data will be returned\n  * @param {Number} measureIndex - the  index within the \"measure\" dimension\n  * @param {Number} durationIndex - the  index within the \"duration\" dimension\n  * @param {Number} firstSpaceIndex - the  index within the \"first-space\" dimension\n  * @return {Array} the data, or null\n  */\n  getSpectrum( measureIndex = -1, durationIndex = -1, firstSpaceIndex = -1){\n    var sizes = this._qeegModObj.metadata.sizes;\n    var data = this._qeegModObj.data;\n    \n    // get the whole data\n    if( measureIndex == -1 && \n        durationIndex == -1 &&\n        firstSpaceIndex == -1 )\n    {\n      return data.slice();\n    }\n    \n    // get spectrum at a given measureIndex\n    if( measureIndex >=0 && measureIndex < sizes.measure &&\n        durationIndex == -1 &&\n        firstSpaceIndex == -1 )\n    {\n      var startIndex = this._getOffset( measureIndex, 0, 0, 0 );\n      var endIndex = this._getOffset( measureIndex+1, 0, 0, 0 );\n      \n      return data.slice(startIndex, endIndex);\n    }\n    \n    // get spectrum at a given measureIndex and a durationIndex\n    if( measureIndex >=0 && measureIndex < sizes.measure &&\n        durationIndex >=0 && durationIndex < sizes.duration &&\n        firstSpaceIndex == -1 )\n    {\n      var startIndex = this._getOffset( measureIndex, durationIndex, 0, 0 );\n      var endIndex = this._getOffset( measureIndex, durationIndex+1, 0, 0 );\n      \n      return data.slice(startIndex, endIndex);\n    }\n    \n    // get spectrum at a given measureIndex, a durationIndex and a firstSpaceIndex\n    if( measureIndex >=0 && measureIndex < sizes.measure &&\n        durationIndex >=0 && durationIndex < sizes.duration &&\n        firstSpaceIndex >= 0 && firstSpaceIndex < sizes.firstSpace )\n    {\n      var startIndex = this._getOffset( measureIndex, durationIndex, firstSpaceIndex, 0 );\n      var endIndex = this._getOffset( measureIndex, durationIndex, firstSpaceIndex+1, 0 );\n      \n      return data.slice(startIndex, endIndex);\n    }\n    \n    return null;\n  }\n  \n  \n  /**\n  * Instead of using indexes among each dimension, it can be easier to call values by their names.\n  * Does the same as `.getSpectrum()` but uses names instead of indexes.\n  * @param {String} measureLabel - the desired label within the 'measure' dimension (optional)\n  * @param {String} durationLabel - the desired label within the 'duration' dimension (optional)\n  * @param {String} firstSpaceLabel - the desired label within the 'first-space' dimension (optional)\n  * @return {Array} matched data, or null if using a non-existing label\n  */\n  getSpectrumByLabels( measureLabel = null, durationLabel = null, firstSpaceLabel = null ){\n    var info = this._qeegModObj.metadata.informationList;\n    var measureIndex = info[0].labels.indexOf( measureLabel )\n    var durationIndex = info[1].labels.indexOf( durationLabel )\n    var firstSpaceIndex = info[2].labels.indexOf( firstSpaceLabel )\n    \n    if( measureLabel && measureIndex == -1 ){\n      console.warn(\"The measure label \" + measureLabel + \" could not be found.\");\n      return null\n    }\n    \n    if( durationLabel && durationIndex == -1 ){\n      console.warn(\"The duration label \" + durationLabel + \" could not be found.\");\n      return null\n    }\n    \n    if( firstSpaceLabel && firstSpaceIndex == -1 ){\n      console.warn(\"The first-space label \" + firstSpaceLabel + \" could not be found.\");\n      return null\n    }\n    \n    return this.getSpectrum( measureIndex, durationIndex, firstSpaceIndex );\n  }\n  \n  \n  /**\n  * Get all the labels as a hierarchical cascade. For examples, if you feel\n  * the 3 arguments for a dataset that have a second-space dimension of size\n  * greater than 1, it will return an array [ \"the measure label\",\n  * \"the duration label\", \"the first space label\", [\"1st label of 2nd sp\"\n  * \"2nd label of 2nd sp\", \"3rd label of 2nd sp\"]]. Only the last argument\n  * (the array) is not already given in argument but this sort of repeat is so\n  * that the returned values has all the cascade.\n  * @param {String} measureLabel - the desired label within the 'measure' dimension (optional)\n  * @param {String} durationLabel - the desired label within the 'duration' dimension (optional)\n  * @param {String} firstSpaceLabel - the desired label within the 'first-space' dimension (optional)\n  * @return {Array} contains the hierarchical cascade of labels, the last element being an array\n  */\n  getSpectrumLabelsByLabels( measureLabel = null, durationLabel = null, firstSpaceLabel = null ){\n    var info = this._qeegModObj.metadata.informationList;\n    var measureIndex = info[0].labels.indexOf( measureLabel )\n    var durationIndex = info[1].labels.indexOf( durationLabel )\n    var firstSpaceIndex = info[2].labels.indexOf( firstSpaceLabel )\n    \n    if( measureLabel && measureIndex == -1 ){\n      console.warn(\"The measure label \" + measureLabel + \" could not be found.\");\n      return null\n    }\n    \n    if( durationLabel && durationIndex == -1 ){\n      console.warn(\"The duration label \" + durationLabel + \" could not be found.\");\n      return null\n    }\n    \n    if( firstSpaceLabel && firstSpaceIndex == -1 ){\n      console.warn(\"The first-space label \" + firstSpaceLabel + \" could not be found.\");\n      return null\n    }\n    \n    return this.getSpectrumLabels( measureIndex, durationIndex, firstSpaceIndex );\n  }\n  \n  \n  /**\n  * Does like getSpectrumLabelsByLabels but uses the indexes among each dimension\n  * rather than their labels.\n  * @param {Number} measureIndex - the  index within the \"measure\" dimension\n  * @param {Number} durationIndex - the  index within the \"duration\" dimension\n  * @param {Number} firstSpaceIndex - the  index within the \"first-space\" dimension\n  * @return {Array} contains the hierarchical cascade of labels, the last element being an array\n  */\n  getSpectrumLabels( measureIndex = -1, durationIndex = -1, firstSpaceIndex = -1 ){\n    var sizes = this._qeegModObj.metadata.sizes;\n    var info = this._qeegModObj.metadata.informationList;\n    var arrayOfLabels = []\n    \n    // get the whole data labels\n    if( measureIndex == -1 && \n        durationIndex == -1 &&\n        firstSpaceIndex == -1 )\n    {\n      if( info[0].labels )\n        arrayOfLabels.push( info[0].labels.slice() )\n        \n      if( info[1].labels )\n        arrayOfLabels.push( info[1].labels.slice() )\n        \n      if( info[2].labels )  \n        arrayOfLabels.push( info[2].labels.slice() )\n        \n      if( info[3].labels )\n        arrayOfLabels.push( info[3].labels.slice() )\n        \n      return arrayOfLabels;\n    }\n    \n    // get spectrum labels starting from a given measureIndex\n    if( measureIndex >=0 && measureIndex < sizes.measure &&\n        durationIndex == -1 &&\n        firstSpaceIndex == -1 )\n    {\n      var startIndex = this._getOffset( measureIndex, 0, 0, 0 );\n      var endIndex = this._getOffset( measureIndex+1, 0, 0, 0 );\n      \n      if( info[0].labels &&  info[0].labels.length > measureIndex )\n        arrayOfLabels.push( info[0].labels[ measureIndex ] )\n      \n      if( info[1].labels )\n        arrayOfLabels.push( info[1].labels.slice() )\n        \n      if( info[2].labels )  \n        arrayOfLabels.push( info[2].labels.slice() )\n        \n      if( info[3].labels )\n        arrayOfLabels.push( info[3].labels.slice() )\n      \n      return arrayOfLabels;\n    }\n    \n    // get spectrum at a given measureIndex and a durationIndex\n    if( measureIndex >=0 && measureIndex < sizes.measure &&\n        durationIndex >=0 && durationIndex < sizes.duration &&\n        firstSpaceIndex == -1 )\n    {\n      var startIndex = this._getOffset( measureIndex, durationIndex, 0, 0 );\n      var endIndex = this._getOffset( measureIndex, durationIndex+1, 0, 0 );\n      \n      if( info[0].labels &&  info[0].labels.length > measureIndex )\n        arrayOfLabels.push( info[0].labels[ measureIndex ] )\n        \n      if( info[1].labels &&  info[1].labels.length > durationIndex )\n        arrayOfLabels.push( info[1].labels[ durationIndex ] )\n      \n      if( info[2].labels )  \n        arrayOfLabels.push( info[2].labels.slice() )\n        \n      if( info[3].labels )\n        arrayOfLabels.push( info[3].labels.slice() )\n      \n      return arrayOfLabels;\n    }\n    \n    // get spectrum at a given measureIndex, a durationIndex and a firstSpaceIndex\n    if( measureIndex >=0 && measureIndex < sizes.measure &&\n        durationIndex >=0 && durationIndex < sizes.duration &&\n        firstSpaceIndex >= 0 && firstSpaceIndex < sizes.firstSpace )\n    {\n      var startIndex = this._getOffset( measureIndex, durationIndex, firstSpaceIndex, 0 );\n      var endIndex = this._getOffset( measureIndex, durationIndex, firstSpaceIndex+1, 0 );\n      \n      if( info[0].labels &&  info[0].labels.length > measureIndex )\n        arrayOfLabels.push( info[0].labels[ measureIndex ] )\n        \n      if( info[1].labels &&  info[1].labels.length > durationIndex )\n        arrayOfLabels.push( info[1].labels[ durationIndex ] )\n      \n      if( info[2].labels &&  info[2].labels.length > firstSpaceIndex )\n        arrayOfLabels.push( info[2].labels[ firstSpaceIndex ] )\n        \n      if( info[3].labels )\n        arrayOfLabels.push( info[3].labels.slice() )\n        \n      return arrayOfLabels;\n    }\n    \n    return null;\n  }\n  \n  \n  /**\n  * [PRIVATE]\n  * Get the offset of the querried data withing the 1D array\n  */\n  _getOffset( measureIndex, durationIndex, firstSpaceIndex, secondSpaceIndex ){\n    var sizes = this._qeegModObj.metadata.sizes;\n    return ( measureIndex * sizes.duration * sizes.firstSpace + durationIndex * sizes.firstSpace + firstSpaceIndex ) * sizes.secondSpace + secondSpaceIndex;\n  }\n  \n  \n  \n  \n} /* END of class QeegModFileInterpreter */\n\nexport { QeegModFileInterpreter }\n"],"names":["QeegModFileParser","_rawData","data","qeegData","_parseNoException","e","warn","inputBuffer","view","DataView","littleEndian","header","protectionMask","getUint16","commentRealLength","getUint8","commentBytes","Uint8Array","comment","String","fromCharCode","apply","measureSize","durationSize","firstSpaceSize","secondSpaceSize","reservedBytes","dataSize","matrixOffset","matrixSizeElements","matrixSizeBytes","matrixData","Float32Array","i","getFloat32","reservedBytesSectionOffset","infoSectionOffset","infoRealLength","infoBytes","info","headerOfListOffset","listSize","offsetByteSize","totalByteSize","headerOfList","Array","record","description","infoSection2Offset","localOffset","length","nbOfElem","total","labels","fill","j","strByteLength","strBytes","str","replace","transformation","listOfContexts","contextsByteLength","types","values","regexTypeDetection","iCtx","split","typeMatch","exec","toLowerCase","value","b","modEeg","QeegModFileInterpreter","qeegModObj","_qeegModObj","_typeCode","_typeCodeMap","setQeegModObj","type","getType","_defineTypeCode","metadata","informationList","sizes","measure","duration","firstSpace","secondSpace","getDimensionSizes","n","ctx","allContexts","push","index","getMeasureName","getDurationName","getFirstSpaceName","getSecondSpaceName","measureIndex","durationIndex","firstSpaceIndex","secondSpaceIndex","offset","_getOffset","slice","startIndex","endIndex","measureLabel","durationLabel","firstSpaceLabel","indexOf","getSpectrum","getSpectrumLabels","arrayOfLabels"],"mappings":"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"}